Done:
-- Dynamics
- Change dyn_gen, prop and time_evo types to object
- choose oper_dtype
-- Propagator computer
- change exponentiations to Qobj.expm() where possible
- change augmentation to sparse
-- Timeslot computer
- time evo computation
-- Fidelity computer
- Fidelities and gradients
-- Optim result
- convert final evo to Qobj

ToDo:

-- Dynamics
.- Accessors
  onto_evo_target 
  dyn_gen 
  prop 
  prop_grad
  evo_fwd 
  evo_onwd
  evo_onto
	phased_dyn_gen
	phased_ctrl_dyn_gen
-- PropComp
- change access level

- Eigen decomp lists
- eigen decomp using Qobj (inc prop comp)
- update Dynamics attribute docs



Testing:
- test oper_dtype=csr_matrix
- Test augmented matrix prop_comp
- compare optim times for old vs new
- compare prop_comp diag with standard
- test approx_grad. Try Scalable Clock Hand
- test state-to-state

